import numpy as np
import matplotlib.pyplot as plt

def extended_six_hump_camelback(x, y):
    return ((4 - 2.1 * x**2 + (x**4) / 3) * x**2 + x * y + (4 * y**2 - 4) * y**2)

x_vals = np.linspace(-2, 2, 400)
y_vals = np.linspace(-1.5, 1.5, 400)
X, Y = np.meshgrid(x_vals, y_vals)

Z = extended_six_hump_camelback(X, Y)

Z_adjusted = np.clip(Z, -1, 5)

fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(111, projection='3d')

surface = ax.plot_surface(X, Y, Z_adjusted, cmap='viridis', edgecolor='none', alpha=0.8)

fig.colorbar(surface, ax=ax, shrink=0.5, aspect=5)

ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_zlabel('f(x, y)')
ax.set_title('Extended Six-Hump Camelback Function (No Path)')

ax.view_init(elev=50, azim=-45)
ax.set_zlim(-1, 5)
ax.set_ylim(-1, 1)

plt.show()
